


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    3 00000000                 IMPORT           rt_interrupt_from_thread
    4 00000000                 IMPORT           rt_interrupt_to_thread
    5 00000000         
    6 00000000         ;*******************************************************
                       ******************
    7 00000000         ;                                 ³£Á¿
    8 00000000         ;*******************************************************
                       ******************
    9 00000000         ;-------------------------------------------------------
                       ------------------
   10 00000000         ;ÓÐ¹ØÄÚºËÍâÉè¼Ä´æÆ÷¶¨Òå¿É²Î¿¼¹Ù·½ÎÄµµ£ºSTM32F10xxx Corte
                       x-M3 programming manual
   11 00000000         ;ÏµÍ³¿ØÖÆ¿éÍâÉèSCBµØÖ··¶Î§£º0xE000ED00-0xE000ED3F
   12 00000000         ;-------------------------------------------------------
                       ------------------
   13 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ; ÏòÁ¿±íÆ«ÒÆ¼Ä´æÆ÷
   14 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; ÖÐ¶Ï¿ØÖÆ×´Ì¬¼Ä´æÆ
                                                            ÷
   15 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ; ÏµÍ³ÓÅÏÈ¼¶¼Ä´æÆ÷(
                                                            2)
   16 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ; PendSV ÓÅÏÈ¼¶Öµ (
                                                            lowest)
   17 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; ´¥·¢PendSV except
                                                            ionµÄÖµ
   18 00000000         
   19 00000000         ;*******************************************************
                       ******************
   20 00000000         ;                              ´úÂë²úÉúÖ¸Áî
   21 00000000         ;*******************************************************
                       ******************
   22 00000000         
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000                 REQUIRE8
   26 00000000                 PRESERVE8
   27 00000000         
   28 00000000         ;ÔÚrthw.hÀïÃæÉùÃ÷
   29 00000000         ;µ÷ÓÃÊ±£¬ÓÐÒ»¸ö²ÎÊý£¬Ôò´«ÈëR0£¬ÓÐÁ½¸ö²ÎÊý£¬ÔòÁíÍâÒ»¸ö´«È
                       ëR1
   30 00000000         
   31 00000000         ;µÚÒ»´ÎÆô¶¯Ïß³Ì
   32 00000000         rt_hw_context_switch_to
                               PROC
   33 00000000         
   34 00000000                 EXPORT           rt_hw_context_switch_to
   35 00000000         



ARM Macro Assembler    Page 2 


   36 00000000 4926            LDR              r1,=rt_interrupt_to_thread
   37 00000002 6008            STR              r0,[r1]
   38 00000004         
   39 00000004         ;ÉèÖÃrt_interrupt_from_thread = 0£¬´ú±íµÚÒ»´ÎÆô¶¯
   40 00000004 4926            LDR              r1,=rt_interrupt_from_thread
   41 00000006 F04F 0000       MOV              r0,#0x0
   42 0000000A 6008            STR              r0,[r1]
   43 0000000C         
   44 0000000C         ;ÉèÖÃrt_thread_switch_interrupt_flag = 1
   45 0000000C 4925            LDR              r1,=rt_thread_switch_interrupt_
flag
   46 0000000E F04F 0001       MOV              r0,#1
   47 00000012 6008            STR              r0,[r1]
   48 00000014         
   49 00000014         ;ÉèÖÃ PendSV ÓÅÏÈ¼¶
   50 00000014 4824            LDR              r0,=NVIC_SYSPRI2
   51 00000016 F44F 017F       LDR              r1,=NVIC_PENDSV_PRI
   52 0000001A F8D0 2000       LDR.W            r2,[r0,#0x00]
   53 0000001E EA41 0102       ORR              r1,r1,r2
   54 00000022 6001            STR              r1,[r0]
   55 00000024         
   56 00000024 4821            LDR              r0,=NVIC_INT_CTRL
   57 00000026 F04F 5180       LDR              r1,=NVIC_PENDSVSET
   58 0000002A 6001            STR              r1,[r0]
   59 0000002C         
   60 0000002C B661            CPSIE            F
   61 0000002E B662            CPSIE            I
   62 00000030         
   63 00000030                 ENDP
   64 00000030         
   65 00000030         rt_hw_context_switch
                               PROC
   66 00000030         
   67 00000030                 EXPORT           rt_hw_context_switch
   68 00000030         
   69 00000030 4A1C            LDR              r2,=rt_thread_switch_interrupt_
flag
   70 00000032 6813            LDR              r3,[r2]
   71 00000034 2B01            CMP              r3,#1
   72 00000036 D004            BEQ              _reswitch
   73 00000038 F04F 0301       MOV              r3,#1
   74 0000003C 6013            STR              r3,[r2]
   75 0000003E         
   76 0000003E 4A18            LDR              r2,=rt_interrupt_from_thread
   77 00000040 6010            STR              r0,[r2]
   78 00000042         
   79 00000042         _reswitch
   80 00000042 4A16            LDR              r2,=rt_interrupt_to_thread
   81 00000044 6011            STR              r1,[r2]
   82 00000046         
   83 00000046 4819            LDR              r0,=NVIC_INT_CTRL
   84 00000048 F04F 5180       LDR              r1,=NVIC_PENDSVSET
   85 0000004C 6001            STR              r1,[r0]
   86 0000004E         
   87 0000004E 4770            BX               LR
   88 00000050         
   89 00000050                 ENDP
   90 00000050         
   91 00000050         ;/*



ARM Macro Assembler    Page 3 


   92 00000050         ; *-----------------------------------------------------
                       ------------------
   93 00000050         ; * void PendSV_Handler(void);
   94 00000050         ; * r0 --> switch from thread stack
   95 00000050         ; * r1 --> switch to thread stack
   96 00000050         ; * psr, pc, lr, r12, r3, r2, r1, r0 are pushed into [fr
                       om] stack
   97 00000050         ; *-----------------------------------------------------
                       ------------------
   98 00000050         ; */
   99 00000050         PendSV_Handler
                               PROC
  100 00000050                 EXPORT           PendSV_Handler
  101 00000050         
  102 00000050 F3EF 8210       MRS              r2,PRIMASK
  103 00000054 B672            CPSID            I
  104 00000056         
  105 00000056 4813            LDR              r0,=rt_thread_switch_interrupt_
flag
  106 00000058 6801            LDR              r1,[r0]
  107 0000005A B191            CBZ              r1,pendsv_exit
  108 0000005C         
  109 0000005C F04F 0100       MOV              r1,#0x00
  110 00000060 6001            STR              r1,[r0]
  111 00000062         
  112 00000062 480F            LDR              r0,=rt_interrupt_from_thread
  113 00000064 6801            LDR              r1,[r0]
  114 00000066         ;rt_interrupt_from_thread = 0, Ìø×ª switch_to_thread
  115 00000066 B129            CBZ              r1,switch_to_thread
  116 00000068         
  117 00000068         
  118 00000068 F3EF 8109       MRS              r1,psp
  119 0000006C E921 0FF0       STMFD            r1!,{r4-r11}
  120 00000070 6800            LDR              r0,[r0]
  121 00000072 6001            STR              r1,[r0]
  122 00000074         
  123 00000074         switch_to_thread
  124 00000074         
  125 00000074 4909            LDR              r1,=rt_interrupt_to_thread
  126 00000076 6809            LDR              r1,[r1]
  127 00000078 6809            LDR              r1,[r1]
  128 0000007A         
  129 0000007A E8B1 0FF0       LDMFD            r1!,{r4-r11}
  130 0000007E F381 8809       MSR              psp,r1
  131 00000082         
  132 00000082         pendsv_exit
  133 00000082 F382 8810       MSR              PRIMASK,r2
  134 00000086         
  135 00000086 F04E 0E04       ORR              lr,lr,#0x04
  136 0000008A         
  137 0000008A 4770            BX               lr
  138 0000008C         
  139 0000008C                 ENDP
  140 0000008C         
  141 0000008C         rt_hw_interrupt_disable
                               PROC
  142 0000008C                 EXPORT           rt_hw_interrupt_disable
  143 0000008C F3EF 8010       MRS              r0,PRIMASK
  144 00000090 B672            CPSID            I



ARM Macro Assembler    Page 4 


  145 00000092 4770            BX               LR
  146 00000094                 ENDP
  147 00000094         
  148 00000094         rt_hw_interrupt_enable
                               PROC
  149 00000094                 EXPORT           rt_hw_interrupt_enable
  150 00000094 F380 8810       MSR              PRIMASK,r0
  151 00000098 4770            BX               LR
  152 0000009A                 ENDP
  153 0000009A         
  154 0000009A 00 00           ALIGN            4
  155 0000009C         
  156 0000009C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -ID:\Keil\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -ID:\Keil\ARM\PACK\ARM\CMS
IS\5.0.1\Device\ARM\ARMCM3\Include --predefine="__UVISION_VERSION SETA 524" --p
redefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listings\context_r
vds.lst ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000050

Symbol: PendSV_Handler
   Definitions
      At line 99 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 100 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: PendSV_Handler used once
_reswitch 00000042

Symbol: _reswitch
   Definitions
      At line 79 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 72 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: _reswitch used once
pendsv_exit 00000082

Symbol: pendsv_exit
   Definitions
      At line 132 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 107 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 00000030

Symbol: rt_hw_context_switch
   Definitions
      At line 65 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 67 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 32 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 34 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch_to used once
rt_hw_interrupt_disable 0000008C

Symbol: rt_hw_interrupt_disable
   Definitions
      At line 141 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 142 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_interrupt_disable used once
rt_hw_interrupt_enable 00000094

Symbol: rt_hw_interrupt_enable



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 148 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 149 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_interrupt_enable used once
switch_to_thread 00000074

Symbol: switch_to_thread
   Definitions
      At line 123 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 115 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: switch_to_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 14 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 56 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 83 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 17 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 57 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 84 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 16 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 51 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 15 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 50 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 13 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 3 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 40 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 76 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 112 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 4 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 36 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 80 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 125 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 2 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 45 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 69 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s
      At line 105 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.s

3 symbols
352 symbols in table
