


ARM Macro Assembler    Page 1 


    1 00000000         ;**************************************************
    2 00000000         ;    È«¾Ö±äÁ¿
    3 00000000         ;**************************************************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;**************************************************
    9 00000000         ;    ³£Á¿
   10 00000000         ;**************************************************
   11 00000000         ;ÓÐ¹ØÄÚºËÍâÉè¼Ä´æÆ÷¶¨Òå¿É²Î¿¼¹Ù·½ÎÄµµ£ºSTM32F10XXX Corte
                       x-M3 Programming manual
   12 00000000         ;ÏµÍ³¿ØÖÆ¿éÍâÉèSCBµØÖ··¶Î§£º0xE000ED00-0XE000ED3F
   13 00000000         ;-------------------------------------------------
   14 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   15 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04
   16 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20
   17 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000
   18 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000
   19 00000000         
   20 00000000         ;**************************************************
   21 00000000         ;    ´úÂë²úÉúÖ¸Áî
   22 00000000         ;**************************************************
   23 00000000                 AREA             |.text|, code, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000                 REQUIRE8
   26 00000000                 PRESERVE8
   27 00000000         
   28 00000000         
   29 00000000         ;**************************************************
   30 00000000         ; º¯ÊýÔ­ÐÍ£º void rt_hw_context_switch_to(rt_uint32 to);
                       
   31 00000000         ; r0 -> to
   32 00000000         ;  ¸Ãº¯ÊýÓÃÓÚ¿ªÆôµÚÒ»´ÎÏß³ÌÇÐ»»
   33 00000000         ;**************************************************
   34 00000000         rt_hw_context_switch_to
                               PROC
   35 00000000         
   36 00000000         ; µ¼³ört_hw_context_switch_to£¬ ÈÃÆä¾ßÓÐÈ«¾ÖÊôÐÔ£¬¿ÉÒÔÔÚ
                       CÎÄ¼þµ÷ÓÃ
   37 00000000                 EXPORT           rt_hw_context_switch_to
   38 00000000         
   39 00000000         
   40 00000000         ; ½«rt_interrupt_to_threadµÄµØÖ·¼ÓÔØµ½r1
   41 00000000 4922            LDR              r1, =rt_interrupt_to_thread
   42 00000002         ; ½«r0µÄÖµ´æ´¢µ½rt_interrupt_to_thread
   43 00000002 6008            STR              r0, [r1]
   44 00000004         



ARM Macro Assembler    Page 2 


   45 00000004         
   46 00000004         ; ÉèÖÃrt_interrupt_from_threadµÄÖµÎª0£¬±íÊ¾Æô¶¯µÚÒ»´ÎÏß³
                       ÌÇÐ»»
   47 00000004         ;  ½«rt_interrupt_from_threadµÄµØÖ·¼ÓÔØµ½r1
   48 00000004 4922            LDR              r1, =rt_interrupt_from_thread
   49 00000006         ;  ÅäÖÃr0 = 0
   50 00000006 F04F 0000       MOV              r0, #0x0
   51 0000000A         ; ½«r0µÄÖµ´æ´¢µ½rt_interrupt_from_thread
   52 0000000A 6008            STR              r0, [r1]
   53 0000000C         
   54 0000000C         
   55 0000000C         ; ÉèÖÃrt_thread_switch_interrupt_flagµÄÖµÎª1
   56 0000000C         ; ½«rt_thread_switch_interrupt_flagµÄµØÖ·¼ÓÔØµ½r1
   57 0000000C 4921            LDR              r1, =rt_thread_switch_interrupt
_flag
   58 0000000E         ;  ÅäÖÃr0 = 1
   59 0000000E F04F 0001       MOV              r0, #1
   60 00000012         ; ½«r0µÄÖµ´æ´¢µ½rt_thread_switch_interrupt_flag
   61 00000012 6008            STR              r0, [r1]
   62 00000014         
   63 00000014         ;  ÉèÖÃPendSV Òì³£µÄÓÅÏÈ¼¶
   64 00000014 4820            LDR              r0, =NVIC_SYSPRI2
   65 00000016 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   66 0000001A F8D0 2000       LDR.W            r2, [r0, #0x00]
   67 0000001E EA41 0102       ORR              r1, r1, r2
   68 00000022 6001            STR              r1, [r0]
   69 00000024         
   70 00000024         ; ´¥·¢ PendSVÒì³£ (²úÉúÉÏÏÂÎÄÇÐ»»)
   71 00000024 481D            LDR              r0, =NVIC_INT_CTRL
   72 00000026 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   73 0000002A 6001            STR              r1, [r0]
   74 0000002C         
   75 0000002C         ; ¿ªÖÐ¶Ï
   76 0000002C B661            CPSIE            F
   77 0000002E B662            CPSIE            I
   78 00000030         
   79 00000030                 ENDP
   80 00000030         
   81 00000030         
   82 00000030         ;**************************************************
   83 00000030         ; void PendSV_Handler(void);
   84 00000030         ; r0 --> switch from thread stack
   85 00000030         ;  r1 --> switch to thread stack
   86 00000030         ; psr, pc, lr, r12, r3, r2, r1, r0 are pushed into [from
                       ] stack
   87 00000030         ;**************************************************
   88 00000030         PendSV_Handler
                               PROC
   89 00000030                 EXPORT           PendSV_Handler
   90 00000030         
   91 00000030         ; Ê§ÄÜÖÐ¶Ï£¬ÎªÁË±£»¤ÉÏÏÂÎÄÇÐ»»²»±»ÖÐ¶Ï
   92 00000030 F3EF 8210       MRS              r2, PRIMASK
   93 00000034 B672            CPSID            I
   94 00000036         
   95 00000036         ; »ñÈ¡ÖÐ¶Ï±êÖ¾Î»£¬¿´¿´ÊÇ·ñÎª0
   96 00000036         ;  ¼ÓÔØrt_thread_switch_interrupt_flagµÄµØÖ·µ½r0
   97 00000036 4817            LDR              r0, =rt_thread_switch_interrupt
_flag
   98 00000038         ;  ¼ÓÔØrt_thread_switch_interrupt_flagµÄµØÖ·µ½r1



ARM Macro Assembler    Page 3 


   99 00000038 6801            LDR              r1, [r0]
  100 0000003A         ; ÅÐ¶Ïr1ÊÇ·ñÎª0£¬Îª0ÔòÌø×ªµ½pendsv_exit
  101 0000003A B191            CBZ              r1, pendsv_exit
  102 0000003C         
  103 0000003C         ; r1 != 0, r1 = 0
  104 0000003C F04F 0100       MOV              r1, #0x00
  105 00000040         ; ½«r1µÄÖµ¼ÓÔØµ½rt_thread_switch_interrupt_flag
  106 00000040 6001            STR              r1, [r0]
  107 00000042         
  108 00000042         
  109 00000042         ; ÅÐ¶Ïrt_interrupt_from_threadµÄÖµÊÇ·ñÎª0
  110 00000042         ; ¼ÓÔØrt_interrupt_from_threadµ½r0
  111 00000042 4813            LDR              r0, =rt_interrupt_from_thread
  112 00000044 6801            LDR              r1, [r0]
  113 00000046 B129            CBZ              r1, switch_to_thread
  114 00000048         
  115 00000048         ;===================== ÉÏÎÄ±£´æ ========================
                       =
  116 00000048         ; µ±½øÈë PendSV_Handler Ê±£¬ÉÏÒ»¸öÏß³ÌÔËÐÐµÄ»·¾³¼´£º
  117 00000048         ; xPSR, PC, R14, R12, R3, R2, R1, R0
  118 00000048         ; ÕâÐ©CPU¼Ä´æÆ÷µÄÖµ»á×Ô¶¯±£´æµ½Ïß³ÌµÄÕ»ÖÐ£¬Ê£ÏÂr4~r11ÐèÒ
                       ªÊÖ¶¯±£´æ
  119 00000048         ; »ñÈ¡Ïß³ÌÕ»Ö¸Õëµ½r1
  120 00000048 F3EF 8109       MRS              r1, psp
  121 0000004C         ;  ½«CPU¼Ä´æÆ÷r4~r11µÄÖµ´æ´¢µ½r1Ö¸ÏòµÄµØÖ·
  122 0000004C E921 0FF0       STMFD            r1!, {r4 - r11}
  123 00000050         ;  ¼ÓÔØr0Ö¸ÏòÖµµ½r0£¬¼´r0=rt_interrupt_from_thread
  124 00000050 6800            LDR              r0, [r0]
  125 00000052 6001            STR              r1, [r0]
  126 00000054         
  127 00000054         ;===================== ÏÂÎÄÇÐ»» ========================
                       =
  128 00000054         switch_to_thread
  129 00000054         
  130 00000054 490D            LDR              r1, =rt_interrupt_to_thread
  131 00000056 6809            LDR              r1, [r1]
  132 00000058 6809            LDR              r1, [r1]
  133 0000005A         
  134 0000005A E8B1 0FF0       LDMFD            r1!, {r4-r11}
  135 0000005E F381 8809       MSR              psp, r1
  136 00000062         
  137 00000062         pendsv_exit
  138 00000062         
  139 00000062 F382 8810       MSR              PRIMASK, r2
  140 00000066 F04E 0E04       ORR              lr, lr, #0x04
  141 0000006A         
  142 0000006A 4770            BX               lr
  143 0000006C         
  144 0000006C                 ENDP
  145 0000006C         
  146 0000006C         
  147 0000006C         ;**************************************************
  148 0000006C         ; void rt_hw_context_switch(rt_uint32_t from, rt_uint32_
                       t to);
  149 0000006C         ;**************************************************
  150 0000006C         rt_hw_context_switch
                               PROC
  151 0000006C         
  152 0000006C                 EXPORT           rt_hw_context_switch



ARM Macro Assembler    Page 4 


  153 0000006C         
  154 0000006C 4A09            LDR              r2,=rt_thread_switch_interrupt_
flag
  155 0000006E 6813            LDR              r3,[r2]
  156 00000070 2B01            CMP              r3,#1
  157 00000072 D004            BEQ              _reswitch
  158 00000074 F04F 0301       MOV              r3,#1
  159 00000078 6013            STR              r3,[r2]
  160 0000007A         
  161 0000007A 4A05            LDR              r2,=rt_interrupt_from_thread
  162 0000007C 6010            STR              r0,[r2]
  163 0000007E         
  164 0000007E         _reswitch
  165 0000007E 4A03            LDR              r2,=rt_interrupt_to_thread
  166 00000080 6011            STR              r1,[r2]
  167 00000082         
  168 00000082 4806            LDR              r0,=NVIC_INT_CTRL
  169 00000084 F04F 5180       LDR              r1,=NVIC_PENDSVSET
  170 00000088 6001            STR              r1,[r0]
  171 0000008A         
  172 0000008A 4770            BX               LR
  173 0000008C         
  174 0000008C                 ENDP
  175 0000008C         
  176 0000008C         ;============= ÎÄ¼þ½áÊø ===========
  177 0000008C                 ALIGN            4
  178 0000008C         
  179 0000008C                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -IC:\IDE\Keil_v5\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\IDE\Keil
_v5\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\ARMCM3\Include --predefine="__UVISION_
VERSION SETA 527" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list
=.\listings\context_rvds.lst ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      None
Comment: .text unused
PendSV_Handler 00000030

Symbol: PendSV_Handler
   Definitions
      At line 88 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 89 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: PendSV_Handler used once
_reswitch 0000007E

Symbol: _reswitch
   Definitions
      At line 164 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 157 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: _reswitch used once
pendsv_exit 00000062

Symbol: pendsv_exit
   Definitions
      At line 137 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 101 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: pendsv_exit used once
rt_hw_context_switch 0000006C

Symbol: rt_hw_context_switch
   Definitions
      At line 150 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 152 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 34 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 37 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: rt_hw_context_switch_to used once
switch_to_thread 00000054

Symbol: switch_to_thread
   Definitions
      At line 128 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 113 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: switch_to_thread used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 15 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 71 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 168 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 18 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 72 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 169 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 17 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 65 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 16 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 64 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 14 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 48 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 111 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 161 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 41 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 130 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 165 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
   Uses
      At line 57 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 97 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S
      At line 154 in file ..\rtthread\libcpu\arm\cortex-m3\context_rvds.S

3 symbols
350 symbols in table
